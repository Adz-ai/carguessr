// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/check-guess": {
            "post": {
                "description": "Submit a price guess and get feedback on accuracy, score, and game status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Submit a price guess for a car",
                "parameters": [
                    {
                        "description": "Price guess data",
                        "name": "guess",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GuessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GuessResponse"
                        }
                    },
                    "400": {
                        "description": "error: Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: Listing not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/data-source": {
            "get": {
                "description": "Returns information about the current data source being used for car listings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Get current data source information",
                "responses": {
                    "200": {
                        "description": "data_source, total_listings, and description",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/leaderboard": {
            "get": {
                "description": "Returns the leaderboard optionally filtered by game mode",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get the game leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game mode filter (zero or streak)",
                        "name": "mode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LeaderboardEntry"
                            }
                        }
                    }
                }
            }
        },
        "/api/listings": {
            "get": {
                "description": "Returns all car listings currently loaded in the system with full details including prices",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Get all available car listings",
                "responses": {
                    "200": {
                        "description": "count and cars array",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/random-listing": {
            "get": {
                "description": "Returns a random car listing with the price hidden (set to 0) for the guessing game",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get a random car listing for the game",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "404": {
                        "description": "error: No listings available",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/test-scraper": {
            "get": {
                "description": "Tests the AutoTrader scraper and returns up to 10 cars with full details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Test the car scraper directly",
                "responses": {
                    "200": {
                        "description": "message, count, and cars array",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error and message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Car": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fuelType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "make": {
                    "type": "string"
                },
                "mileage": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "originalUrl": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "transmission": {
                    "type": "string"
                },
                "vin": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.GuessRequest": {
            "type": "object",
            "required": [
                "gameMode",
                "guessedPrice",
                "listingId"
            ],
            "properties": {
                "gameMode": {
                    "type": "string",
                    "enum": [
                        "zero",
                        "streak"
                    ]
                },
                "guessedPrice": {
                    "type": "number",
                    "minimum": 0
                },
                "listingId": {
                    "type": "string"
                }
            }
        },
        "models.GuessResponse": {
            "type": "object",
            "properties": {
                "actualPrice": {
                    "type": "number"
                },
                "correct": {
                    "type": "boolean"
                },
                "difference": {
                    "type": "number"
                },
                "gameOver": {
                    "type": "boolean"
                },
                "guessedPrice": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                },
                "originalUrl": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "models.LeaderboardEntry": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "gameMode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "AutoTrader Price Guesser API",
	Description:      "A fun game API where players guess car prices from real AutoTrader UK listings",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
