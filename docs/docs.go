// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/your-repo/motors-price-guesser",
        "contact": {
            "name": "Motors Price Guesser Support",
            "url": "https://github.com/your-repo/motors-price-guesser/issues"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin/cache-status": {
            "get": {
                "security": [
                    {
                        "AdminKey": []
                    }
                ],
                "description": "Returns information about the current cache status, age, and listing counts. Requires admin authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get cache status information (Admin Only)",
                "responses": {
                    "200": {
                        "description": "cache status information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized - Admin key required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "error: Too Many Requests - Rate limited",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/listings": {
            "get": {
                "security": [
                    {
                        "AdminKey": []
                    }
                ],
                "description": "Returns all car listings currently loaded in the system with full details including prices. This reveals all answers and is restricted to admin access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all available car listings (Admin Only)",
                "responses": {
                    "200": {
                        "description": "count and cars array",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized - Admin key required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "error: Too Many Requests - Rate limited",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/refresh-listings": {
            "post": {
                "security": [
                    {
                        "AdminKey": []
                    }
                ],
                "description": "Triggers a non-blocking background refresh of car listings from Bonhams. Requires admin authentication and has a 30-minute cooldown between requests. Game continues normally during refresh.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Manually refresh car listings (Admin Only)",
                "responses": {
                    "200": {
                        "description": "message: refresh started, status: refreshing, note: game continues normally",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized - Admin key required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "error: Too Many Requests - Rate limited or refresh cooldown active",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/test-scraper": {
            "get": {
                "security": [
                    {
                        "AdminKey": []
                    }
                ],
                "description": "Tests the AutoTrader scraper and returns up to 10 cars with full details. This is an expensive operation. Requires admin authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Test the car scraper directly (Admin Only)",
                "responses": {
                    "200": {
                        "description": "message, count, and cars array",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized - Admin key required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "error: Too Many Requests - Rate limited",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error and message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/challenge/start": {
            "post": {
                "description": "Starts a new 10-car challenge session with GeoGuessr-style scoring. Players get up to 5000 points per car based on guess accuracy. Rate limited to 60 requests per minute per IP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenge"
                ],
                "summary": "Start a new Challenge Mode session",
                "responses": {
                    "200": {
                        "description": "sessionId, cars array (10 cars with prices hidden), currentCar: 0, totalScore: 0",
                        "schema": {
                            "$ref": "#/definitions/models.ChallengeSession"
                        }
                    },
                    "404": {
                        "description": "error: Not enough cars available for challenge mode",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "error: Too Many Requests - Rate limited",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/challenge/{sessionId}": {
            "get": {
                "description": "Returns the current state of a challenge session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenge"
                ],
                "summary": "Get current challenge session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ChallengeSession"
                        }
                    },
                    "404": {
                        "description": "error: Session not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/challenge/{sessionId}/guess": {
            "post": {
                "description": "Submit a price guess for the current car in challenge mode. Returns points based on accuracy (max 5000 points). Rate limited to 60 requests per minute per IP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenge"
                ],
                "summary": "Submit a guess for challenge mode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Challenge Session ID (16 alphanumeric characters)",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Price guess (max price: £10,000,000)",
                        "name": "guess",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChallengeGuessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "points earned, totalScore, isLastCar, message, originalUrl",
                        "schema": {
                            "$ref": "#/definitions/models.ChallengeResponse"
                        }
                    },
                    "400": {
                        "description": "error: Invalid request, session complete, or price exceeds maximum",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: Session not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "error: Too Many Requests - Rate limited",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/check-guess": {
            "post": {
                "description": "Submit a price guess and get feedback on accuracy, score, and game status. Rate limited to 60 requests per minute per IP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Submit a price guess for a car",
                "parameters": [
                    {
                        "description": "Price guess data (max price: £10,000,000)",
                        "name": "guess",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GuessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GuessResponse"
                        }
                    },
                    "400": {
                        "description": "error: Invalid request or price exceeds maximum",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error: Listing not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "error: Too Many Requests - Rate limited",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/data-source": {
            "get": {
                "description": "Returns information about the data source (Bonhams Car Auctions) including total listings count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Get current data source information",
                "responses": {
                    "200": {
                        "description": "data_source: bonhams_auctions, total_listings: count, description: Real Bonhams Car Auction results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/leaderboard": {
            "get": {
                "description": "Returns the leaderboard optionally filtered by game mode",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get the game leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game mode filter (zero or streak)",
                        "name": "mode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LeaderboardEntry"
                            }
                        }
                    }
                }
            }
        },
        "/api/random-enhanced-listing": {
            "get": {
                "description": "Returns a random car listing with full auction details and characteristics, price hidden for guessing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get a random car listing with all Bonhams characteristics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EnhancedCar"
                        }
                    },
                    "404": {
                        "description": "error: No listings available",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/random-listing": {
            "get": {
                "description": "Returns a random car listing with the price hidden (set to 0) for the guessing game. Rate limited to 60 requests per minute per IP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get a random car listing for the game",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EnhancedCar"
                        }
                    },
                    "404": {
                        "description": "error: No listings available",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "error: Too Many Requests - Rate limited",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ChallengeGuess": {
            "type": "object",
            "properties": {
                "actualPrice": {
                    "type": "number"
                },
                "carId": {
                    "type": "string"
                },
                "difference": {
                    "type": "number"
                },
                "guessedPrice": {
                    "type": "number"
                },
                "percentage": {
                    "type": "number"
                },
                "points": {
                    "type": "integer"
                }
            }
        },
        "models.ChallengeGuessRequest": {
            "type": "object",
            "required": [
                "guessedPrice"
            ],
            "properties": {
                "guessedPrice": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "models.ChallengeResponse": {
            "type": "object",
            "properties": {
                "actualPrice": {
                    "type": "number"
                },
                "carId": {
                    "type": "string"
                },
                "difference": {
                    "type": "number"
                },
                "guessedPrice": {
                    "type": "number"
                },
                "isLastCar": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "nextCarNumber": {
                    "type": "integer"
                },
                "originalUrl": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                },
                "points": {
                    "type": "integer"
                },
                "sessionComplete": {
                    "type": "boolean"
                },
                "totalScore": {
                    "type": "integer"
                }
            }
        },
        "models.ChallengeSession": {
            "type": "object",
            "properties": {
                "cars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnhancedCar"
                    }
                },
                "completedTime": {
                    "type": "string"
                },
                "currentCar": {
                    "type": "integer"
                },
                "guesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ChallengeGuess"
                    }
                },
                "isComplete": {
                    "type": "boolean"
                },
                "sessionId": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "totalScore": {
                    "type": "integer"
                }
            }
        },
        "models.EnhancedCar": {
            "type": "object",
            "properties": {
                "auctionDetails": {
                    "description": "Flag indicating this is auction data",
                    "type": "boolean"
                },
                "bodyColour": {
                    "type": "string"
                },
                "bodyType": {
                    "type": "string"
                },
                "description": {
                    "description": "Combined description",
                    "type": "string"
                },
                "doors": {
                    "type": "string"
                },
                "emissionClass": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "exteriorColor": {
                    "description": "More detailed color",
                    "type": "string"
                },
                "fuelType": {
                    "type": "string"
                },
                "gearbox": {
                    "type": "string"
                },
                "id": {
                    "description": "Standard Car fields",
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "interiorColor": {
                    "description": "Interior details",
                    "type": "string"
                },
                "keyFacts": {
                    "description": "Auction key facts",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "description": "Vehicle location e.g. \"Bournemouth, Dorset, United Kingdom\"",
                    "type": "string"
                },
                "make": {
                    "type": "string"
                },
                "mileage": {
                    "description": "Standard overview fields",
                    "type": "integer"
                },
                "mileageFormatted": {
                    "description": "Enhanced Bonhams fields",
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "originalUrl": {
                    "type": "string"
                },
                "owners": {
                    "type": "string"
                },
                "price": {
                    "description": "Will be 0 for guessing",
                    "type": "number"
                },
                "registration": {
                    "type": "string"
                },
                "saleDate": {
                    "description": "Sale date in format \"29 Jul 2025\"",
                    "type": "string"
                },
                "seats": {
                    "type": "string"
                },
                "steering": {
                    "description": "\"Right-hand drive\"",
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.GuessRequest": {
            "type": "object",
            "required": [
                "gameMode",
                "guessedPrice",
                "listingId"
            ],
            "properties": {
                "gameMode": {
                    "type": "string",
                    "enum": [
                        "zero",
                        "streak",
                        "challenge"
                    ]
                },
                "guessedPrice": {
                    "type": "number",
                    "minimum": 0
                },
                "listingId": {
                    "type": "string"
                }
            }
        },
        "models.GuessResponse": {
            "type": "object",
            "properties": {
                "actualPrice": {
                    "type": "number"
                },
                "correct": {
                    "type": "boolean"
                },
                "difference": {
                    "type": "number"
                },
                "gameOver": {
                    "type": "boolean"
                },
                "guessedPrice": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                },
                "originalUrl": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "models.LeaderboardEntry": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "gameMode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "AdminKey": {
            "description": "Admin API key required for administrative endpoints. Can also be passed as 'admin_key' query parameter.",
            "type": "apiKey",
            "name": "X-Admin-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.1",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Motors Price Guesser API",
	Description:      "A fun car price guessing game with multiple game modes using real Bonhams Car Auction data. Now with enhanced security, rate limiting, and 250 cars with 7-day refresh cycles.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
