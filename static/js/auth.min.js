let currentUser=null,currentChallengeCode=null;async function checkAuthStatus(){var e=localStorage.getItem("sessionToken");if(e)try{var t,a=await fetch("/api/auth/profile",{headers:{Authorization:"Bearer "+e}});(a.ok?(t=await a.json(),(currentUser=t.user).leaderboardStats=t.leaderboardStats,showAuthenticatedUI):(localStorage.removeItem("sessionToken"),showUnauthenticatedUI))()}catch(e){console.error("Auth check failed:",e),showUnauthenticatedUI()}else showUnauthenticatedUI()}function showAuthenticatedUI(){document.getElementById("loginBtn").style.display="none",document.getElementById("userMenu").style.display="block",document.getElementById("userDisplayName").textContent=currentUser.displayName||currentUser.username,document.getElementById("friendChallengeSection").style.display="block",document.getElementById("signupPromotionSection").style.display="none",document.getElementById("challengesBtn").style.display="inline-block"}function showUnauthenticatedUI(){document.getElementById("loginBtn").style.display="inline-block",document.getElementById("userMenu").style.display="none",document.getElementById("friendChallengeSection").style.display="none",document.getElementById("signupPromotionSection").style.display="block",document.getElementById("challengesBtn").style.display="none"}function toggleUserDropdown(){var e=document.getElementById("userDropdown");e.style.display="none"===e.style.display?"block":"none"}function showLoginModal(){closeAllModals(),document.getElementById("loginModal").style.display="flex"}function showRegisterModal(){closeAllModals(),document.getElementById("registerModal").style.display="flex"}function switchToRegister(){document.getElementById("loginModal").style.display="none",document.getElementById("registerModal").style.display="flex"}function switchToLogin(){document.getElementById("registerModal").style.display="none",document.getElementById("loginModal").style.display="flex"}function closeModal(e){document.getElementById(e).style.display="none"}function closeAllModals(){document.querySelectorAll(".modal").forEach(e=>e.style.display="none")}async function handleLogin(e){e.preventDefault();var e=document.getElementById("loginUsername").value,t=document.getElementById("loginPassword").value;try{var a=await(await fetch("/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:t})})).json();a.success?(localStorage.setItem("sessionToken",a.sessionToken),currentUser=a.user,closeModal("loginModal"),showAuthenticatedUI(),showToast("Login successful!","success")):showToast(a.message||"Login failed","error")}catch(e){console.error("Login error:",e),showToast("Login failed. Please try again.","error")}}async function handleRegister(e){e.preventDefault();var e=document.getElementById("registerUsername").value,t=document.getElementById("registerDisplayName").value,a=document.getElementById("registerPassword").value,n=document.getElementById("registerSecurityQuestion").value,l=document.getElementById("registerSecurityAnswer").value;try{var s=await(await fetch("/api/auth/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,displayName:t,password:a,securityQuestion:n,securityAnswer:l})})).json();s.success?(localStorage.setItem("sessionToken",s.sessionToken),currentUser=s.user,closeModal("registerModal"),showAuthenticatedUI(),showToast("Account created successfully!","success")):showToast(s.message||"Registration failed","error")}catch(e){console.error("Registration error:",e),showToast("Registration failed. Please try again.","error")}}async function logout(){try{var e=localStorage.getItem("sessionToken");e&&await fetch("/api/auth/logout",{method:"POST",headers:{Authorization:"Bearer "+e}})}catch(e){console.error("Logout error:",e)}localStorage.removeItem("sessionToken"),currentUser=null,showUnauthenticatedUI(),location.reload()}async function showProfile(){var e;currentUser?(closeAllModals(),document.getElementById("profileModal").style.display="flex",document.getElementById("profileDisplayName").textContent=currentUser.displayName||currentUser.username,document.getElementById("profileUsername").textContent=currentUser.username,document.getElementById("profileAccountType").textContent="Registered Account",e=new Date(currentUser.createdAt),document.getElementById("profileMemberSince").textContent=e.toLocaleDateString(),await loadUserStats()):showLoginModal()}function showCreateChallengeModal(){currentUser?(closeAllModals(),document.getElementById("createChallengeModal").style.display="flex"):showLoginModal()}function showJoinChallengeModal(){currentUser?(closeAllModals(),document.getElementById("joinChallengeModal").style.display="flex"):showLoginModal()}async function handleCreateChallenge(e){e.preventDefault();var e=document.getElementById("challengeTitle").value,t=document.getElementById("challengeDifficulty").value,a=parseInt(document.getElementById("maxParticipants").value);try{var n=localStorage.getItem("sessionToken"),l=await(await fetch("/api/friends/challenges",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+n},body:JSON.stringify({title:e,difficulty:t,maxParticipants:a})})).json();l.success?(currentChallengeCode=l.challengeCode,document.getElementById("createdChallengeCode").textContent=l.challengeCode,document.getElementById("challengeShareMessage").textContent=l.shareMessage,l.sessionId&&localStorage.setItem("creatorSessionId",l.sessionId),closeModal("createChallengeModal"),document.getElementById("challengeCreatedModal").style.display="flex"):showToast(l.message||"Failed to create challenge","error")}catch(e){console.error("Create challenge error:",e),showToast("Failed to create challenge","error")}}async function handleJoinChallenge(e){e.preventDefault();e=document.getElementById("challengeCode").value.toUpperCase();try{var t=localStorage.getItem("sessionToken"),a=await(await fetch(`/api/friends/challenges/${e}/join`,{method:"POST",headers:{Authorization:"Bearer "+t}})).json();a.success?(closeAllModals(),showToast(a.message,"success"),startChallengeWithSession(a.sessionId,a.challenge.difficulty)):showToast(a.message||"Failed to join challenge","error")}catch(e){console.error("Join challenge error:",e),showToast("Failed to join challenge","error")}}function copyChallengCode(){var e=document.getElementById("createdChallengeCode").textContent;navigator.clipboard.writeText(e).then(()=>{showToast("Challenge code copied!","success")}).catch(()=>{showToast("Failed to copy code","error")})}async function startChallengeFromCode(){if(currentChallengeCode)try{var e,t,a,n=localStorage.getItem("creatorSessionId");n?(e=document.getElementById("challengeDifficulty").value,closeAllModals(),startChallengeWithSession(n,e),localStorage.removeItem("creatorSessionId")):(t=localStorage.getItem("sessionToken"),(a=await(await fetch(`/api/friends/challenges/${currentChallengeCode}/join`,{method:"POST",headers:{Authorization:"Bearer "+t}})).json()).success?(closeAllModals(),startChallengeWithSession(a.sessionId,a.challenge.difficulty)):showToast(a.message||"Failed to start challenge","error"))}catch(e){console.error("Error starting challenge:",e),showToast("Failed to start challenge","error")}}function startChallengeWithSession(e,t){localStorage.setItem("challengeSessionId",e),localStorage.setItem("selectedDifficulty",t),window.currentGame&&(window.currentGame.mode="challenge",window.currentGame.difficulty=t,window.currentGame.sessionId=e),document.getElementById("modeSelection").style.display="none",document.getElementById("gameArea").style.display="block",document.getElementById("scoreDisplay").style.display="inline-block";t=document.getElementById("scoreLabel");t&&(t.textContent="Score: "),window.initializeChallenge&&window.initializeChallenge(e)}function showMyChallenges(){openChallenges()}async function openChallenges(){currentUser?(closeAllModals(),document.getElementById("myChallengesModal").style.display="flex",await loadMyChallenges()):showLoginModal()}async function loadMyChallenges(){try{var e=localStorage.getItem("sessionToken"),t=await(await fetch("/api/friends/challenges/my-challenges",{headers:{Authorization:"Bearer "+e}})).json();t.success?(displayCreatedChallenges(t.created),displayParticipatingChallenges(t.participating)):showToast(t.message||"Failed to load challenges","error")}catch(e){console.error("Failed to load challenges:",e),showToast("Failed to load challenges","error"),document.getElementById("createdChallenges").innerHTML='<div class="error-state">Failed to load challenges</div>',document.getElementById("participatingChallenges").innerHTML='<div class="error-state">Failed to load challenges</div>'}}function displayCreatedChallenges(e){var t=document.getElementById("createdChallenges");e&&0!==e.length?(console.log("Displaying created challenges:",e),e=e.map(e=>{var t=new Date(e.createdAt).toLocaleDateString(),a=new Date(e.expiresAt).toLocaleDateString(),n=new Date>new Date(e.expiresAt),l=n?"‚è∞":e.isActive?"üü¢":"üî¥",s=n?"Expired":e.isActive?"Active":"Inactive";return`
            <div class="challenge-item ${n?"expired":""}">
                <div class="challenge-header">
                    <h4>${e.title}</h4>
                    <span class="challenge-status">${l} ${s}</span>
                </div>
                <div class="challenge-details">
                    <span class="challenge-code">Code: <strong>${e.challengeCode}</strong></span>
                    <span class="challenge-difficulty">${"easy"===e.difficulty?"üü¢ Easy":"üî¥ Hard"}</span>
                    <span class="challenge-participants">${e.participantCount||0}/${e.maxParticipants} players</span>
                </div>
                <div class="challenge-dates">
                    <small>Created: ${t} | Expires: ${a}</small>
                </div>
                <div class="challenge-actions">
                    <button onclick="copyToClipboard('${e.challengeCode}')" class="action-btn copy-btn">üìã Copy Code</button>
                    <button onclick="showChallengeLeaderboard('${e.challengeCode}')" class="action-btn leaderboard-btn">üèÜ Leaderboard</button>
                    ${!n&&e.isActive&&!0!==e.isComplete?`<button onclick="resumeChallenge('${e.challengeCode}')" class="action-btn resume-btn">‚ñ∂Ô∏è Play</button>`:""}
                    ${!n&&e.isActive&&!0!==e.isComplete?`<button onclick="shareChallenge('${e.challengeCode}', '${e.title}')" class="action-btn share-btn">üì§ Share</button>`:""}
                    ${!0===e.isComplete?'<span class="completion-status">‚úÖ Completed</span>':""}
                </div>
            </div>
        `}).join(""),t.innerHTML=e):t.innerHTML='<div class="empty-state">You haven\'t created any challenges yet.<br><button onclick="showCreateChallengeModal(); closeModal(\'myChallengesModal\');" class="create-challenge-btn">Create Your First Challenge</button></div>'}function displayParticipatingChallenges(e){var t=document.getElementById("participatingChallenges");e&&0!==e.length?(console.log("Displaying participating challenges:",e),e=e.map(e=>{var t=e.joinedAt?new Date(e.joinedAt).toLocaleDateString():"Unknown",a=e.expiresAt?new Date(e.expiresAt).toLocaleDateString():"Unknown",n=!!e.expiresAt&&new Date>new Date(e.expiresAt),l=n?"‚è∞":e.isActive?"üü¢":"üî¥",s=n?"Expired":e.isActive?"Active":"Inactive";return`
            <div class="challenge-item ${n?"expired":""}">
                <div class="challenge-header">
                    <h4>${e.title}</h4>
                    <span class="challenge-status">${l} ${s}</span>
                </div>
                <div class="challenge-details">
                    <span class="challenge-creator">By: ${e.creatorDisplayName}</span>
                    <span class="challenge-code">Code: <strong>${e.challengeCode}</strong></span>
                    <span class="challenge-difficulty">${"easy"===e.difficulty?"üü¢ Easy":"üî¥ Hard"}</span>
                </div>
                <div class="challenge-dates">
                    <small>Joined: ${t} | Expires: ${a}</small>
                </div>
                <div class="challenge-actions">
                    <button onclick="showChallengeLeaderboard('${e.challengeCode}')" class="action-btn leaderboard-btn">üèÜ Leaderboard</button>
                    ${!n&&e.isActive&&!0!==e.isComplete?`<button onclick="resumeChallenge('${e.challengeCode}')" class="action-btn resume-btn">‚ñ∂Ô∏è Resume</button>`:""}
                    ${!0===e.isComplete?'<span class="completion-status">‚úÖ Completed</span>':""}
                </div>
            </div>
        `}).join(""),t.innerHTML=e):t.innerHTML='<div class="empty-state">You haven\'t joined any challenges yet.<br><button onclick="showJoinChallengeModal(); closeModal(\'myChallengesModal\');" class="join-challenge-btn">Join a Challenge</button></div>'}function switchChallengeTab(e){document.querySelectorAll(".tab-button").forEach(e=>e.classList.remove("active")),event.target.classList.add("active"),"created"===e?(document.getElementById("createdChallenges").style.display="block",document.getElementById("participatingChallenges").style.display="none"):(document.getElementById("createdChallenges").style.display="none",document.getElementById("participatingChallenges").style.display="block")}function copyToClipboard(e){navigator.clipboard.writeText(e).then(()=>{showToast("Challenge code copied!","success")}).catch(()=>{showToast("Failed to copy code","error")})}function shareChallenge(e,t){e=`Join my CarGuessr challenge "${t}"! Use code: `+e;navigator.share?navigator.share({title:"CarGuessr Challenge: "+t,text:e,url:window.location.href}):(copyToClipboard(e+`

Play at: `+window.location.href),showToast("Challenge details copied to clipboard!","success"))}async function resumeChallenge(e){try{var t=localStorage.getItem("sessionToken"),a=await fetch(`/api/friends/challenges/${e}/participation`,{headers:{Authorization:"Bearer "+t}});if(a.ok){var n,l=await a.json();if(l.success&&l.session)return(n=l.session).isComplete?void showToast("You have already completed this challenge!","info"):(closeAllModals(),void startChallengeWithSession(n.sessionId,l.challenge.difficulty))}var s=await(await fetch(`/api/friends/challenges/${e}/join`,{method:"POST",headers:{Authorization:"Bearer "+t}})).json();s.success?(closeAllModals(),startChallengeWithSession(s.sessionId,s.challenge.difficulty)):s.message&&s.message.includes("already participating")?showToast("You have already completed this challenge!","info"):showToast(s.message||"Failed to resume challenge","error")}catch(e){console.error("Error resuming challenge:",e),showToast("Failed to resume challenge","error")}}async function loadUserStats(){try{var t,a=localStorage.getItem("sessionToken"),n=await fetch("/api/auth/profile",{headers:{Authorization:"Bearer "+a}}),l=(n.ok&&(t=await n.json(),(currentUser=t.user).leaderboardStats=t.leaderboardStats),document.getElementById("totalGamesPlayed").textContent=currentUser.totalGamesPlayed||0,currentUser.favoriteDifficulty);let e="None yet";"easy"===l?e="Easy":"hard"===l&&(e="Hard"),document.getElementById("favoriteDifficulty").textContent=e;var s=currentUser.leaderboardStats||{};document.getElementById("challengeEasyRegisteredRank").textContent=s.challenge_easy_registered_rank||"N/A",document.getElementById("challengeEasyOverallRank").textContent=s.challenge_easy_overall_rank||"N/A",document.getElementById("challengeHardRegisteredRank").textContent=s.challenge_hard_registered_rank||"N/A",document.getElementById("challengeHardOverallRank").textContent=s.challenge_hard_overall_rank||"N/A";var o=await(await fetch("/api/friends/challenges/my-challenges",{headers:{Authorization:"Bearer "+a}})).json();o.success&&(document.getElementById("challengesCreated").textContent=o.created?.length||0,document.getElementById("challengesJoined").textContent=o.participating?.length||0)}catch(e){console.error("Failed to load user stats:",e)}}async function showChallengeLeaderboard(e){currentChallengeCode=e,document.getElementById("challengeCodeDisplay").textContent=e,closeModal("myChallengesModal"),document.getElementById("challengeLeaderboardModal").style.display="flex",await refreshChallengeLeaderboard()}async function refreshChallengeLeaderboard(){if(currentChallengeCode)try{var e=await(await fetch(`/api/friends/challenges/${currentChallengeCode}/leaderboard`)).json();e.success&&displayChallengeParticipants(e.participants,e.challenge)}catch(e){console.error("Failed to load leaderboard:",e),showToast("Failed to load leaderboard","error")}}function displayChallengeParticipants(e,t){var a=document.getElementById("challengeParticipants");a.innerHTML="",0===e.length?a.innerHTML='<p class="no-participants">No participants yet</p>':(e=e.map((e,t)=>{var a=e.isComplete?"‚úÖ":"‚è≥";return`
            <div class="participant-row ${t<3?"top-three":""}">
                <span class="rank">${0===t?"ü•á":1===t?"ü•à":2===t?"ü•â":t+1+"."}</span>
                <span class="name">${e.userDisplayName||e.displayName||e.username||"Anonymous"}</span>
                <span class="score">${null!==e.finalScore?e.finalScore:"-"}</span>
                <span class="status">${a}</span>
            </div>
        `}).join(""),a.innerHTML=e,document.getElementById("challengeLeaderboardTitle").textContent="üèÜ "+t.title)}function showToast(e,t="info"){var a=document.querySelector(".toast");a&&a.remove();let n=document.createElement("div");n.className="toast toast-"+t,n.textContent=e,document.body.appendChild(n),setTimeout(()=>n.classList.add("show"),10),setTimeout(()=>{n.classList.remove("show"),setTimeout(()=>n.remove(),300)},3e3)}document.addEventListener("DOMContentLoaded",async()=>{await checkAuthStatus()}),document.addEventListener("click",e=>{e.target.closest(".user-menu")||(document.getElementById("userDropdown").style.display="none")});let toastStyles=`
    .toast {
        position: fixed;
        bottom: 20px;
        right: 20px;
        padding: 12px 24px;
        background: #333;
        color: white;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.3s ease;
        z-index: 3000;
        max-width: 300px;
    }
    
    .toast.show {
        opacity: 1;
        transform: translateY(0);
    }
    
    .toast-success {
        background: #4CAF50;
    }
    
    .toast-error {
        background: #f44336;
    }
    
    .toast-info {
        background: #2196F3;
    }
    
    @media (max-width: 768px) {
        .toast {
            bottom: 60px;
            right: 10px;
            left: 10px;
            max-width: none;
        }
    }
`,styleSheet=document.createElement("style");function showPasswordReset(){closeAllModals(),document.getElementById("passwordResetModal").style.display="flex",document.getElementById("securityQuestionSection").style.display="none",document.getElementById("verifyUserBtn").style.display="inline-block",document.getElementById("resetPasswordBtn").style.display="none",document.getElementById("passwordResetForm").reset()}async function verifyUserForReset(){var e=document.getElementById("resetUsername").value,t=document.getElementById("resetDisplayName").value;if(e&&t)try{var a=await(await fetch("/api/auth/security-question",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,displayName:t})})).json();a.success?(document.getElementById("securityQuestionText").textContent=a.securityQuestion,document.getElementById("securityQuestionSection").style.display="block",document.getElementById("verifyUserBtn").style.display="none",document.getElementById("resetPasswordBtn").style.display="inline-block"):showToast(a.message||"User not found with those credentials","error")}catch(e){console.error("Verification error:",e),showToast("Failed to verify user. Please try again.","error")}else showToast("Please enter both username and display name","error")}async function handlePasswordReset(e){e.preventDefault();var e=document.getElementById("resetUsername").value,t=document.getElementById("resetDisplayName").value,a=document.getElementById("resetSecurityAnswer").value,n=document.getElementById("resetNewPassword").value;try{var l=await(await fetch("/api/auth/reset-password",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,displayName:t,securityAnswer:a,newPassword:n})})).json();l.success?(showToast("Password reset successfully! You can now login.","success"),closeModal("passwordResetModal"),showLoginModal()):showToast(l.message||"Password reset failed","error")}catch(e){console.error("Password reset error:",e),showToast("Password reset failed. Please try again.","error")}}function showChallengeGuide(){closeAllModals(),document.getElementById("challengeGuideModal").style.display="flex"}styleSheet.textContent=toastStyles,document.head.appendChild(styleSheet),window.authFunctions={checkAuthStatus:checkAuthStatus,showChallengeLeaderboard:showChallengeLeaderboard,currentUser:()=>currentUser};